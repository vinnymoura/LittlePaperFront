{"version":3,"file":"mdb-angular-ui-kit-scrollspy.mjs","sources":["../../../projects/mdb-angular-ui-kit/scrollspy/scrollspy-link.directive.ts","../../../projects/mdb-angular-ui-kit/scrollspy/scrollspy.service.ts","../../../projects/mdb-angular-ui-kit/scrollspy/scrollspy.directive.ts","../../../projects/mdb-angular-ui-kit/scrollspy/scrollspy-element.directive.ts","../../../projects/mdb-angular-ui-kit/scrollspy/scrollspy-window.directive.ts","../../../projects/mdb-angular-ui-kit/scrollspy/scrollspy.module.ts","../../../projects/mdb-angular-ui-kit/scrollspy/mdb-angular-ui-kit-scrollspy.ts"],"sourcesContent":["import {\n  Directive,\n  OnInit,\n  Input,\n  HostListener,\n  HostBinding,\n  ChangeDetectorRef,\n  Inject,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[mdbScrollspyLink]',\n})\nexport class MdbScrollspyLinkDirective implements OnInit {\n  @Input()\n  get scrollIntoView(): boolean {\n    return this._scrollIntoView;\n  }\n  set scrollIntoView(value: boolean) {\n    this._scrollIntoView = value;\n  }\n  private _scrollIntoView = true;\n\n  get section(): HTMLElement {\n    return this._section;\n  }\n  set section(value: HTMLElement) {\n    if (value) {\n      this._section = value;\n    }\n  }\n  private _section: HTMLElement;\n  private _id: string;\n\n  constructor(private cdRef: ChangeDetectorRef, @Inject(DOCUMENT) private document: any) {}\n\n  @Input('mdbScrollspyLink')\n  get id(): string {\n    return this._id;\n  }\n  set id(newId: string) {\n    if (newId) {\n      this._id = newId;\n    }\n  }\n\n  @HostBinding('class.scrollspy-link')\n  scrollspyLink = true;\n\n  @HostBinding('class.active')\n  active = false;\n\n  @HostListener('click', [])\n  onClick(): void {\n    if (this.section && this.scrollIntoView === true) {\n      this.section.scrollIntoView();\n    }\n  }\n\n  detectChanges(): void {\n    this.cdRef.detectChanges();\n  }\n\n  assignSectionToId(): void {\n    this.section = this.document.documentElement.querySelector(`#${this.id}`);\n  }\n\n  ngOnInit(): void {\n    this.assignSectionToId();\n  }\n}\n","import { Injectable, QueryList } from '@angular/core';\nimport { MdbScrollspyLinkDirective } from './scrollspy-link.directive';\nimport { Subject, Observable } from 'rxjs';\n\nexport interface MdbScrollspy {\n  id: string;\n  links: QueryList<MdbScrollspyLinkDirective>;\n}\n\n@Injectable()\nexport class MdbScrollspyService {\n  scrollSpys: MdbScrollspy[] = [];\n\n  private activeSubject = new Subject<MdbScrollspyLinkDirective>();\n  active$: Observable<any> = this.activeSubject;\n\n  addScrollspy(scrollSpy: MdbScrollspy): void {\n    this.scrollSpys.push(scrollSpy);\n  }\n\n  removeScrollspy(scrollSpyId: string): void {\n    const scrollSpyIndex = this.scrollSpys.findIndex((spy) => {\n      return spy.id === scrollSpyId;\n    });\n    this.scrollSpys.splice(scrollSpyIndex, 1);\n  }\n\n  updateActiveState(scrollSpyId: string, activeLinkId: string): void {\n    const scrollSpy = this.scrollSpys.find((spy) => {\n      return spy.id === scrollSpyId;\n    });\n\n    if (!scrollSpy) {\n      return;\n    }\n\n    const activeLink = scrollSpy.links.find((link) => {\n      return link.id === activeLinkId;\n    });\n\n    this.setActiveLink(activeLink);\n  }\n\n  removeActiveState(scrollSpyId: string, activeLinkId: string): void {\n    const scrollSpy = this.scrollSpys.find((spy) => {\n      return spy.id === scrollSpyId;\n    });\n\n    if (!scrollSpy) {\n      return;\n    }\n\n    const activeLink = scrollSpy.links.find((link) => {\n      return link.id === activeLinkId;\n    });\n\n    if (!activeLink) {\n      return;\n    }\n\n    activeLink.active = false;\n    activeLink.detectChanges();\n  }\n\n  setActiveLink(activeLink: MdbScrollspyLinkDirective | any): void {\n    if (activeLink) {\n      activeLink.active = true;\n      activeLink.detectChanges();\n      this.activeSubject.next(activeLink);\n    }\n  }\n\n  removeActiveLinks(scrollSpyId: string): void {\n    const scrollSpy: MdbScrollspy | undefined = this.scrollSpys.find((spy) => {\n      return spy.id === scrollSpyId;\n    });\n\n    if (!scrollSpy) {\n      return;\n    }\n\n    scrollSpy.links.forEach((link) => {\n      link.active = false;\n      link.detectChanges();\n    });\n  }\n}\n","import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n} from '@angular/core';\nimport { MdbScrollspyLinkDirective } from './scrollspy-link.directive';\nimport { MdbScrollspyService } from './scrollspy.service';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { Subject, Subscription } from 'rxjs';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: '[mdbScrollspy]',\n  template: '<ng-content></ng-content>',\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class MdbScrollspyDirective implements OnInit, AfterContentInit, OnDestroy {\n  @ContentChildren(MdbScrollspyLinkDirective, { descendants: true })\n  links: QueryList<MdbScrollspyLinkDirective>;\n\n  readonly _destroy$: Subject<void> = new Subject<void>();\n\n  @Input('mdbScrollspy')\n  get id(): string {\n    return this._id;\n  }\n\n  set id(newId: string) {\n    if (newId) {\n      this._id = newId;\n    }\n  }\n\n  private _id: string;\n\n  @Output() activeLinkChange: EventEmitter<any> = new EventEmitter<any>();\n\n  activeSub: Subscription;\n\n  constructor(private scrollSpyService: MdbScrollspyService) {}\n\n  ngOnInit(): void {\n    this.activeSub = this.scrollSpyService.active$\n      .pipe(takeUntil(this._destroy$), distinctUntilChanged())\n      .subscribe((activeLink) => {\n        this.activeLinkChange.emit(activeLink);\n      });\n  }\n\n  ngAfterContentInit(): void {\n    this.scrollSpyService.addScrollspy({ id: this.id, links: this.links });\n  }\n\n  ngOnDestroy(): void {\n    this.scrollSpyService.removeScrollspy(this.id);\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  OnInit,\n  Renderer2,\n  NgZone,\n  Input,\n  AfterViewInit,\n} from '@angular/core';\nimport { MdbScrollspyService } from './scrollspy.service';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[mdbScrollspyElement]',\n})\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport class MdbScrollspyElementDirective implements OnInit, AfterViewInit {\n  private id: string;\n\n  get host(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n\n  @Input() container: HTMLElement;\n\n  @Input('mdbScrollspyElement')\n  get scrollSpyId(): string {\n    return this._scrollSpyId;\n  }\n  set scrollSpyId(newId: string) {\n    if (newId) {\n      this._scrollSpyId = newId;\n    }\n  }\n  private _scrollSpyId: string;\n\n  @Input() offset = 0;\n\n  constructor(\n    private _elementRef: ElementRef,\n    private renderer: Renderer2,\n    private ngZone: NgZone,\n    private scrollSpyService: MdbScrollspyService\n  ) {}\n\n  isElementInViewport(): boolean {\n    const scrollTop = this.container.scrollTop;\n    const elTop = this.host.offsetTop - this.offset;\n    const elHeight = this.host.offsetHeight;\n\n    return scrollTop >= elTop && scrollTop < elTop + elHeight;\n  }\n\n  updateActiveState(scrollSpyId: string, id: string): void {\n    if (this.isElementInViewport()) {\n      this.scrollSpyService.removeActiveLinks(scrollSpyId);\n      this.scrollSpyService.updateActiveState(scrollSpyId, id);\n    }\n  }\n\n  onScroll(): void {\n    this.updateActiveState(this.scrollSpyId, this.id);\n  }\n\n  listenToScroll(): void {\n    this.renderer.listen(this.container, 'scroll', () => {\n      this.onScroll();\n    });\n  }\n\n  ngOnInit(): void {\n    this.id = this.host.id;\n\n    if (!this.container) {\n      this.container = this._getClosestEl(this.host, '.scrollspy-container');\n    }\n\n    this.renderer.setStyle(this.container, 'position', 'relative');\n\n    this.ngZone.runOutsideAngular(this.listenToScroll.bind(this));\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.updateActiveState(this.scrollSpyId, this.id);\n    }, 0);\n  }\n\n  private _getClosestEl(el: any, selector: string): HTMLElement | null {\n    for (; el && el !== document; el = el.parentNode) {\n      if (el.matches && el.matches(selector)) {\n        return el;\n      }\n    }\n    return null;\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  OnInit,\n  Inject,\n  Renderer2,\n  NgZone,\n  Input,\n  AfterViewInit,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { MdbScrollspyService } from './scrollspy.service';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[mdbScrollspyWindow]',\n})\nexport class MdbScrollspyWindowDirective implements OnInit, AfterViewInit {\n  private id: string;\n\n  @Input('mdbScrollspyWindow')\n  get scrollSpyId(): string {\n    return this._scrollSpyId;\n  }\n  set scrollSpyId(newId: string) {\n    if (newId) {\n      this._scrollSpyId = newId;\n    }\n  }\n  private _scrollSpyId: string;\n\n  @Input() offset = 0;\n\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private ngZone: NgZone,\n    private scrollSpyService: MdbScrollspyService\n  ) {}\n\n  isElementInViewport(): boolean {\n    const scrollTop = this.document.documentElement.scrollTop || this.document.body.scrollTop;\n    const elHeight = this.el.nativeElement.offsetHeight;\n    const elTop = this.el.nativeElement.offsetTop - this.offset;\n    const elBottom = elTop + elHeight;\n\n    return scrollTop >= elTop && scrollTop <= elBottom;\n  }\n\n  updateActiveState(scrollSpyId: string, id: string): void {\n    if (this.isElementInViewport()) {\n      this.scrollSpyService.updateActiveState(scrollSpyId, id);\n    } else {\n      this.scrollSpyService.removeActiveState(scrollSpyId, id);\n    }\n  }\n\n  onScroll(): void {\n    this.updateActiveState(this.scrollSpyId, this.id);\n  }\n\n  listenToScroll(): void {\n    this.renderer.listen(window, 'scroll', () => {\n      this.onScroll();\n    });\n  }\n\n  ngOnInit(): void {\n    this.id = this.el.nativeElement.id;\n\n    this.ngZone.runOutsideAngular(this.listenToScroll.bind(this));\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.updateActiveState(this.scrollSpyId, this.id);\n    }, 0);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { MdbScrollspyDirective } from './scrollspy.directive';\nimport { MdbScrollspyLinkDirective } from './scrollspy-link.directive';\nimport { MdbScrollspyElementDirective } from './scrollspy-element.directive';\nimport { MdbScrollspyService } from './scrollspy.service';\nimport { MdbScrollspyWindowDirective } from './scrollspy-window.directive';\n\n@NgModule({\n  declarations: [\n    MdbScrollspyDirective,\n    MdbScrollspyLinkDirective,\n    MdbScrollspyElementDirective,\n    MdbScrollspyWindowDirective,\n  ],\n  exports: [\n    MdbScrollspyDirective,\n    MdbScrollspyLinkDirective,\n    MdbScrollspyElementDirective,\n    MdbScrollspyWindowDirective,\n  ],\n  providers: [MdbScrollspyService],\n})\nexport class MdbScrollspyModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}