{"version":3,"file":"mdb-angular-ui-kit-checkbox.mjs","sources":["../../../projects/mdb-angular-ui-kit/checkbox/checkbox.directive.ts","../../../projects/mdb-angular-ui-kit/checkbox/checkbox.module.ts","../../../projects/mdb-angular-ui-kit/checkbox/mdb-angular-ui-kit-checkbox.ts"],"sourcesContent":["import { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  EventEmitter,\n  forwardRef,\n  Input,\n  Output,\n  Directive,\n  HostBinding,\n  HostListener,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const MDB_CHECKBOX_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  // eslint-disable-next-line no-use-before-define, @typescript-eslint/no-use-before-define\n  useExisting: forwardRef(() => MdbCheckboxDirective),\n  multi: true,\n};\n\nexport class MdbCheckboxChange {\n  element: MdbCheckboxDirective;\n  checked: boolean;\n}\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[mdbCheckbox]',\n  providers: [MDB_CHECKBOX_VALUE_ACCESSOR],\n})\nexport class MdbCheckboxDirective {\n  @Input('checked')\n  get checked(): boolean {\n    return this._checked;\n  }\n  set checked(value: boolean) {\n    this._checked = coerceBooleanProperty(value);\n  }\n  private _checked = false;\n\n  @Input('value')\n  get value(): any {\n    return this._value;\n  }\n  set value(value: any) {\n    this._value = value;\n  }\n  private _value: any = null;\n\n  @Input('disabled')\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  @Output() checkboxChange: EventEmitter<MdbCheckboxChange> = new EventEmitter<MdbCheckboxChange>();\n\n  @HostBinding('disabled')\n  get isDisabled(): boolean {\n    return this._disabled;\n  }\n\n  @HostBinding('checked')\n  get isChecked(): boolean {\n    return this._checked;\n  }\n\n  @HostListener('click')\n  onCheckboxClick(): void {\n    this.toggle();\n  }\n\n  @HostListener('blur')\n  onBlur(): void {\n    this.onTouched();\n  }\n\n  constructor() {}\n\n  get changeEvent(): MdbCheckboxChange {\n    const newChangeEvent = new MdbCheckboxChange();\n    newChangeEvent.element = this;\n    newChangeEvent.checked = this.checked;\n    return newChangeEvent;\n  }\n\n  toggle(): void {\n    if (this.disabled) {\n      return;\n    }\n    this._checked = !this._checked;\n    this.onChange(this.checked);\n    this.onCheckboxChange();\n  }\n\n  onCheckboxChange(): void {\n    this.checkboxChange.emit(this.changeEvent);\n  }\n\n  // Control Value Accessor Methods\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  writeValue(value: any): void {\n    this.value = value;\n    this.checked = !!value;\n  }\n\n  registerOnChange(fn: (_: any) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  static ngAcceptInputType_checked: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { MdbCheckboxDirective } from './checkbox.directive';\n\n@NgModule({\n  declarations: [MdbCheckboxDirective],\n  exports: [MdbCheckboxDirective],\n  imports: [CommonModule, FormsModule],\n})\nexport class MdbCheckboxModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;MAYa,2BAA2B,GAAQ;IAC9C,OAAO,EAAE,iBAAiB;;IAE1B,WAAW,EAAE,UAAU,CAAC,MAAM,oBAAoB,CAAC;IACnD,KAAK,EAAE,IAAI;EACX;MAEW,iBAAiB;CAG7B;MAOY,oBAAoB;IAkD/B;QA1CQ,aAAQ,GAAG,KAAK,CAAC;QASjB,WAAM,GAAQ,IAAI,CAAC;QASnB,cAAS,GAAG,KAAK,CAAC;QAEhB,mBAAc,GAAoC,IAAI,YAAY,EAAqB,CAAC;;QA6ClG,aAAQ,GAAG,CAAC,CAAM,QAAO,CAAC;QAC1B,cAAS,GAAG,SAAQ,CAAC;KAxBL;IAjDhB,IACI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IACD,IAAI,OAAO,CAAC,KAAc;QACxB,IAAI,CAAC,QAAQ,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;KAC9C;IAGD,IACI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IACD,IAAI,KAAK,CAAC,KAAU;QAClB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;IAGD,IACI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IACD,IAAI,QAAQ,CAAC,KAAc;QACzB,IAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;KAC/C;IAKD,IACI,UAAU;QACZ,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IAED,IACI,SAAS;QACX,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IAGD,eAAe;QACb,IAAI,CAAC,MAAM,EAAE,CAAC;KACf;IAGD,MAAM;QACJ,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;IAID,IAAI,WAAW;QACb,MAAM,cAAc,GAAG,IAAI,iBAAiB,EAAE,CAAC;QAC/C,cAAc,CAAC,OAAO,GAAG,IAAI,CAAC;QAC9B,cAAc,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QACtC,OAAO,cAAc,CAAC;KACvB;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO;SACR;QACD,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5B,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;IAED,gBAAgB;QACd,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KAC5C;IAMD,UAAU,CAAC,KAAU;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC;KACxB;IAED,gBAAgB,CAAC,EAAoB;QACnC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KACpB;IAED,iBAAiB,CAAC,EAAc;QAC9B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACrB;IAED,gBAAgB,CAAC,UAAmB;QAClC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;KAC5B;;iHA3FU,oBAAoB;qGAApB,oBAAoB,oTAFpB,CAAC,2BAA2B,CAAC;2FAE7B,oBAAoB;kBALhC,SAAS;mBAAC;;oBAET,QAAQ,EAAE,eAAe;oBACzB,SAAS,EAAE,CAAC,2BAA2B,CAAC;iBACzC;0EAGK,OAAO;sBADV,KAAK;uBAAC,SAAS;gBAUZ,KAAK;sBADR,KAAK;uBAAC,OAAO;gBAUV,QAAQ;sBADX,KAAK;uBAAC,UAAU;gBASP,cAAc;sBAAvB,MAAM;gBAGH,UAAU;sBADb,WAAW;uBAAC,UAAU;gBAMnB,SAAS;sBADZ,WAAW;uBAAC,SAAS;gBAMtB,eAAe;sBADd,YAAY;uBAAC,OAAO;gBAMrB,MAAM;sBADL,YAAY;uBAAC,MAAM;;;MC/DT,iBAAiB;;8GAAjB,iBAAiB;+GAAjB,iBAAiB,iBAJb,oBAAoB,aAEzB,YAAY,EAAE,WAAW,aADzB,oBAAoB;+GAGnB,iBAAiB,YAFnB,CAAC,YAAY,EAAE,WAAW,CAAC;2FAEzB,iBAAiB;kBAL7B,QAAQ;mBAAC;oBACR,YAAY,EAAE,CAAC,oBAAoB,CAAC;oBACpC,OAAO,EAAE,CAAC,oBAAoB,CAAC;oBAC/B,OAAO,EAAE,CAAC,YAAY,EAAE,WAAW,CAAC;iBACrC;;;ACVD;;;;;;"}