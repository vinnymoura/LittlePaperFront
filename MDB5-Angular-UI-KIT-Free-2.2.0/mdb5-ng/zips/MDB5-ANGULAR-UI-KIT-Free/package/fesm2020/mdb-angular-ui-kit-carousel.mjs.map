{"version":3,"file":"mdb-angular-ui-kit-carousel.mjs","sources":["../../../projects/mdb-angular-ui-kit/carousel/carousel-item.component.ts","../../../projects/mdb-angular-ui-kit/carousel/carousel.component.ts","../../../projects/mdb-angular-ui-kit/carousel/carousel.component.html","../../../projects/mdb-angular-ui-kit/carousel/carousel.module.ts","../../../projects/mdb-angular-ui-kit/carousel/mdb-angular-ui-kit-carousel.ts"],"sourcesContent":["import { Component, ElementRef, HostBinding, Input } from '@angular/core';\n\n@Component({\n  selector: 'mdb-carousel-item',\n  template: '<ng-content></ng-content>',\n})\nexport class MdbCarouselItemComponent {\n  @Input() interval: number | null = null;\n\n  @HostBinding('class.carousel-item')\n  carouselItem = true;\n\n  @HostBinding('class.active') active = false;\n\n  @HostBinding('class.carousel-item-next') next = false;\n  @HostBinding('class.carousel-item-prev') prev = false;\n  @HostBinding('class.carousel-item-start') start = false;\n  @HostBinding('class.carousel-item-end') end = false;\n\n  get host(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n\n  constructor(private _elementRef: ElementRef) {}\n}\n","import { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n} from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { MdbCarouselItemComponent } from './carousel-item.component';\n\nexport enum Direction {\n  UNKNOWN,\n  NEXT,\n  PREV,\n}\n\n@Component({\n  selector: 'mdb-carousel',\n  templateUrl: './carousel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MdbCarouselComponent implements AfterViewInit, OnDestroy {\n  @ContentChildren(MdbCarouselItemComponent) _items: QueryList<MdbCarouselItemComponent>;\n  get items(): MdbCarouselItemComponent[] {\n    return this._items && this._items.toArray();\n  }\n\n  @Input() animation: 'slide' | 'fade' = 'slide';\n\n  @Input()\n  get controls(): boolean {\n    return this._controls;\n  }\n  set controls(value: boolean) {\n    this._controls = coerceBooleanProperty(value);\n  }\n  private _controls = false;\n\n  @Input()\n  get dark(): boolean {\n    return this._dark;\n  }\n  set dark(value: boolean) {\n    this._dark = coerceBooleanProperty(value);\n  }\n  private _dark = false;\n\n  @Input()\n  get indicators(): boolean {\n    return this._indicators;\n  }\n  set indicators(value: boolean) {\n    this._indicators = coerceBooleanProperty(value);\n  }\n  private _indicators = false;\n\n  @Input()\n  get ride(): boolean {\n    return this._ride;\n  }\n  set ride(value: boolean) {\n    this._ride = coerceBooleanProperty(value);\n  }\n  private _ride = true;\n\n  @Input()\n  get interval(): number {\n    return this._interval;\n  }\n  set interval(value: number) {\n    this._interval = value;\n\n    if (this.items) {\n      this._restartInterval();\n    }\n  }\n  private _interval = 5000;\n\n  @Input() keyboard = true;\n  @Input() pause = true;\n  @Input() wrap = true;\n\n  @Output() slide: EventEmitter<void> = new EventEmitter();\n  @Output() slideChange: EventEmitter<void> = new EventEmitter();\n\n  get activeSlide(): number {\n    return this._activeSlide;\n  }\n\n  set activeSlide(index: number) {\n    if (this.items.length && this._activeSlide !== index) {\n      this._activeSlide = index;\n      this._restartInterval();\n    }\n  }\n  private _activeSlide = 0;\n\n  private _lastInterval: any;\n  private _isPlaying = false;\n  private _isSliding = false;\n\n  private readonly _destroy$: Subject<void> = new Subject<void>();\n\n  @HostListener('mouseenter')\n  onMouseEnter(): void {\n    if (this.pause && this._isPlaying) {\n      this.stop();\n    }\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(): void {\n    if (this.pause && !this._isPlaying) {\n      this.play();\n    }\n  }\n\n  constructor(private _elementRef: ElementRef, private _cdRef: ChangeDetectorRef) {}\n\n  ngAfterViewInit(): void {\n    Promise.resolve().then(() => {\n      this._setActiveSlide(this._activeSlide);\n\n      if (this.interval > 0 && this.ride) {\n        this.play();\n      }\n      this._cdRef.markForCheck();\n    });\n\n    if (this.keyboard) {\n      fromEvent(this._elementRef.nativeElement, 'keydown')\n        .pipe(takeUntil(this._destroy$))\n        .subscribe((event: KeyboardEvent) => {\n          if (event.key === 'ArrowRight') {\n            this.next();\n          } else if (event.key === 'ArrowLeft') {\n            this.prev();\n          }\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  private _setActiveSlide(index: number): void {\n    const currentSlide = this.items[this._activeSlide];\n    currentSlide.active = false;\n\n    const newSlide = this.items[index];\n    newSlide.active = true;\n    this._activeSlide = index;\n  }\n\n  private _restartInterval(): void {\n    this._resetInterval();\n    const activeElement = this.items[this.activeSlide];\n    const interval = activeElement.interval ? activeElement.interval : this.interval;\n\n    if (!isNaN(interval) && interval > 0) {\n      this._lastInterval = setInterval(() => {\n        const nInterval = +interval;\n        if (this._isPlaying && !isNaN(nInterval) && nInterval > 0) {\n          this.next();\n        } else {\n          this.stop();\n        }\n      }, interval);\n    }\n  }\n\n  private _resetInterval(): void {\n    if (this._lastInterval) {\n      clearInterval(this._lastInterval);\n      this._lastInterval = null;\n    }\n  }\n\n  play(): void {\n    if (!this._isPlaying) {\n      this._isPlaying = true;\n      this._restartInterval();\n    }\n  }\n\n  stop(): void {\n    if (this._isPlaying) {\n      this._isPlaying = false;\n      this._resetInterval();\n    }\n  }\n\n  to(index: number): void {\n    if (index > this.items.length - 1 || index < 0) {\n      return;\n    }\n\n    if (this.activeSlide === index) {\n      this.stop();\n      this.play();\n      return;\n    }\n\n    const direction = index > this.activeSlide ? Direction.NEXT : Direction.PREV;\n\n    this._animateSlides(direction, this.activeSlide, index);\n    this.activeSlide = index;\n  }\n\n  next(): void {\n    if (!this._isSliding) {\n      this._slide(Direction.NEXT);\n    }\n  }\n\n  prev(): void {\n    if (!this._isSliding) {\n      this._slide(Direction.PREV);\n    }\n  }\n\n  private _slide(direction: Direction): void {\n    const isFirst = this._activeSlide === 0;\n    const isLast = this._activeSlide === this.items.length - 1;\n\n    if (!this.wrap) {\n      if ((direction === Direction.NEXT && isLast) || (direction === Direction.PREV && isFirst)) {\n        return;\n      }\n    }\n\n    const newSlideIndex = this._getNewSlideIndex(direction);\n\n    this._animateSlides(direction, this.activeSlide, newSlideIndex);\n    this.activeSlide = newSlideIndex;\n\n    this.slide.emit();\n  }\n\n  private _animateSlides(direction: Direction, currentIndex: number, nextIndex: number): void {\n    const currentItem = this.items[currentIndex];\n    const nextItem = this.items[nextIndex];\n    const currentEl = currentItem.host;\n    const nextEl = nextItem.host;\n\n    this._isSliding = true;\n\n    if (this._isPlaying) {\n      this.stop();\n    }\n\n    if (direction === Direction.NEXT) {\n      nextItem.next = true;\n\n      setTimeout(() => {\n        this._reflow(nextEl);\n        currentItem.start = true;\n        nextItem.start = true;\n        this._cdRef.markForCheck();\n      }, 0);\n\n      const transitionDuration = 600;\n\n      fromEvent(currentEl, 'transitionend')\n        .pipe(take(1))\n        .subscribe(() => {\n          nextItem.next = false;\n          nextItem.start = false;\n          nextItem.active = true;\n\n          currentItem.active = false;\n          currentItem.start = false;\n          currentItem.next = false;\n\n          this.slideChange.emit();\n          this._isSliding = false;\n        });\n\n      this._emulateTransitionEnd(currentEl, transitionDuration);\n    } else if (direction === Direction.PREV) {\n      nextItem.prev = true;\n\n      setTimeout(() => {\n        this._reflow(nextEl);\n        currentItem.end = true;\n        nextItem.end = true;\n        this._cdRef.markForCheck();\n      }, 0);\n\n      const transitionDuration = 600;\n\n      fromEvent(currentEl, 'transitionend')\n        .pipe(take(1))\n        .subscribe(() => {\n          nextItem.prev = false;\n          nextItem.end = false;\n          nextItem.active = true;\n\n          currentItem.active = false;\n          currentItem.end = false;\n          currentItem.prev = false;\n\n          this.slideChange.emit();\n          this._isSliding = false;\n        });\n\n      this._emulateTransitionEnd(currentEl, transitionDuration);\n    }\n\n    if (!this._isPlaying && this.interval > 0) {\n      this.play();\n    }\n  }\n\n  private _reflow(element: HTMLElement): number {\n    return element.offsetHeight;\n  }\n\n  private _emulateTransitionEnd(element: HTMLElement, duration: number): void {\n    let eventEmitted = false;\n    const durationPadding = 5;\n    const emulatedDuration = duration + durationPadding;\n\n    fromEvent(element, 'transitionend')\n      .pipe(take(1))\n      .subscribe(() => {\n        eventEmitted = true;\n      });\n\n    setTimeout(() => {\n      if (!eventEmitted) {\n        element.dispatchEvent(new Event('transitionend'));\n      }\n    }, emulatedDuration);\n  }\n\n  private _getNewSlideIndex(direction: Direction): number {\n    let newSlideIndex: number;\n\n    if (direction === Direction.NEXT) {\n      newSlideIndex = this._getNextSlideIndex();\n    }\n\n    if (direction === Direction.PREV) {\n      newSlideIndex = this._getPrevSlideIndex();\n    }\n\n    return newSlideIndex;\n  }\n\n  private _getNextSlideIndex(): number {\n    const isLast = this._activeSlide === this.items.length - 1;\n\n    if (!isLast) {\n      return this._activeSlide + 1;\n    } else if (this.wrap && isLast) {\n      return 0;\n    } else {\n      return this._activeSlide;\n    }\n  }\n\n  private _getPrevSlideIndex(): number {\n    const isFirst = this._activeSlide === 0;\n\n    if (!isFirst) {\n      return this._activeSlide - 1;\n    } else if (this.wrap && isFirst) {\n      return this.items.length - 1;\n    } else {\n      return this._activeSlide;\n    }\n  }\n\n  static ngAcceptInputType_controls: BooleanInput;\n  static ngAcceptInputType_dark: BooleanInput;\n  static ngAcceptInputType_indicators: BooleanInput;\n  static ngAcceptInputType_ride: BooleanInput;\n}\n","<div\n  class=\"carousel slide\"\n  [class.carousel-fade]=\"animation === 'fade'\"\n  [class.carousel-dark]=\"dark\"\n>\n  <div class=\"carousel-indicators\" *ngIf=\"indicators\">\n    <button\n      *ngFor=\"let item of items; let i = index\"\n      type=\"button\"\n      [class.active]=\"i === activeSlide\"\n      [attr.aria-current]=\"i === activeSlide\"\n      (click)=\"to(i)\"\n    ></button>\n  </div>\n\n  <div class=\"carousel-inner\">\n    <ng-content></ng-content>\n  </div>\n\n  <button *ngIf=\"controls\" class=\"carousel-control-prev\" type=\"button\" (click)=\"prev()\">\n    <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n    <span class=\"visually-hidden\">Previous</span>\n  </button>\n  <button *ngIf=\"controls\" class=\"carousel-control-next\" type=\"button\" (click)=\"next()\">\n    <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n    <span class=\"visually-hidden\">Next</span>\n  </button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MdbCarouselComponent } from './carousel.component';\nimport { MdbCarouselItemComponent } from './carousel-item.component';\n\n@NgModule({\n  declarations: [MdbCarouselComponent, MdbCarouselItemComponent],\n  exports: [MdbCarouselComponent, MdbCarouselItemComponent],\n  imports: [CommonModule],\n})\nexport class MdbCarouselModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}