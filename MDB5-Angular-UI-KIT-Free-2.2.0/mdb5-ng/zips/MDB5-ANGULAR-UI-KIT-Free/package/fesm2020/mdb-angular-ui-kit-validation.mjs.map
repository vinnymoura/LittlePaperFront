{"version":3,"file":"mdb-angular-ui-kit-validation.mjs","sources":["../../../projects/mdb-angular-ui-kit/validation/validate.directive.ts","../../../projects/mdb-angular-ui-kit/validation/error.directive.ts","../../../projects/mdb-angular-ui-kit/validation/success.directive.ts","../../../projects/mdb-angular-ui-kit/validation/validation.module.ts","../../../projects/mdb-angular-ui-kit/validation/mdb-angular-ui-kit-validation.ts"],"sourcesContent":["import { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directive, ElementRef, Input, OnInit, Renderer2 } from '@angular/core';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[mdbValidate]',\n})\nexport class MdbValidateDirective implements OnInit {\n  private _validate = true;\n  private _validateSuccess = true;\n  private _validateError = true;\n\n  @Input()\n  get mdbValidate(): boolean {\n    return this._mdbValidate;\n  }\n  set mdbValidate(value: boolean) {\n    this._mdbValidate = coerceBooleanProperty(value);\n  }\n  private _mdbValidate: boolean;\n\n  @Input()\n  get validate(): boolean {\n    return this._validate;\n  }\n  set validate(value: boolean) {\n    this._validate = coerceBooleanProperty(value);\n    this.updateErrorClass();\n    this.updateSuccessClass();\n  }\n\n  @Input()\n  get validateSuccess(): boolean {\n    return this._validateSuccess;\n  }\n  set validateSuccess(value: boolean) {\n    this._validateSuccess = coerceBooleanProperty(value);\n    this.updateSuccessClass();\n  }\n\n  @Input()\n  get validateError(): boolean {\n    return this._validateError;\n  }\n  set validateError(value: boolean) {\n    this._validateError = coerceBooleanProperty(value);\n    this.updateErrorClass();\n    this.updateSuccessClass();\n  }\n\n  constructor(private renderer: Renderer2, private _elementRef: ElementRef) {}\n\n  updateSuccessClass(): void {\n    if (this.validate && this.validateSuccess) {\n      this.renderer.addClass(this._elementRef.nativeElement, 'validate-success');\n    } else {\n      this.renderer.removeClass(this._elementRef.nativeElement, 'validate-success');\n    }\n  }\n\n  updateErrorClass(): void {\n    if (this.validate && this.validateError) {\n      this.renderer.addClass(this._elementRef.nativeElement, 'validate-error');\n    } else {\n      this.renderer.removeClass(this._elementRef.nativeElement, 'validate-error');\n    }\n  }\n\n  ngOnInit(): void {\n    this.updateSuccessClass();\n    this.updateErrorClass();\n  }\n\n  static ngAcceptInputType_mdbValidate: BooleanInput;\n  static ngAcceptInputType_validate: BooleanInput;\n  static ngAcceptInputType_validateSuccess: BooleanInput;\n  static ngAcceptInputType_validateError: BooleanInput;\n}\n","import {\n  Input,\n  HostBinding,\n  ElementRef,\n  Renderer2,\n  OnInit,\n  OnDestroy,\n  Component,\n} from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nlet defaultIdNumber = 0;\n\n@Component({\n  selector: 'mdb-error',\n  template: '<ng-content></ng-content>',\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class MdbErrorDirective implements OnInit, OnDestroy {\n  @Input() id = `mdb-error-${defaultIdNumber++}`;\n\n  @HostBinding('class.error-message') errorMsg = true;\n  @HostBinding('attr.id') messageId = this.id;\n\n  readonly _destroy$: Subject<void> = new Subject<void>();\n\n  constructor(private _elementRef: ElementRef, private renderer: Renderer2) {}\n\n  private _getClosestEl(el: any, selector: string): HTMLElement | null {\n    for (; el && el !== document; el = el.parentNode) {\n      if (el.matches && el.matches(selector)) {\n        return el;\n      }\n    }\n    return null;\n  }\n\n  ngOnInit(): void {\n    const textarea = this._getClosestEl(this._elementRef.nativeElement, 'textarea');\n\n    if (textarea) {\n      let height = textarea.offsetHeight + 4 + 'px';\n      this.renderer.setStyle(this._elementRef.nativeElement, 'top', height);\n\n      fromEvent(textarea, 'keyup')\n        .pipe(takeUntil(this._destroy$))\n        .subscribe(() => {\n          height = textarea.offsetHeight + 4 + 'px';\n          this.renderer.setStyle(this._elementRef.nativeElement, 'top', height);\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n}\n","import {\n  Input,\n  HostBinding,\n  ElementRef,\n  Renderer2,\n  OnInit,\n  OnDestroy,\n  Component,\n} from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nlet defaultIdNumber = 0;\n\n@Component({\n  selector: 'mdb-success',\n  template: '<ng-content></ng-content>',\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class MdbSuccessDirective implements OnInit, OnDestroy {\n  @Input() id = `mdb-success-${defaultIdNumber++}`;\n\n  @HostBinding('class.success-message') successMsg = true;\n  @HostBinding('attr.id') messageId = this.id;\n\n  readonly _destroy$: Subject<void> = new Subject<void>();\n\n  constructor(private _elementRef: ElementRef, private renderer: Renderer2) {}\n\n  private _getClosestEl(el: any, selector: string): HTMLElement | null {\n    for (; el && el !== document; el = el.parentNode) {\n      if (el.matches && el.matches(selector)) {\n        return el;\n      }\n    }\n    return null;\n  }\n\n  ngOnInit(): void {\n    const textarea = this._getClosestEl(this._elementRef.nativeElement, 'textarea');\n\n    if (textarea) {\n      let height = textarea.offsetHeight + 4 + 'px';\n      this.renderer.setStyle(this._elementRef.nativeElement, 'top', height);\n\n      fromEvent(textarea, 'keyup')\n        .pipe(takeUntil(this._destroy$))\n        .subscribe(() => {\n          height = textarea.offsetHeight + 4 + 'px';\n          this.renderer.setStyle(this._elementRef.nativeElement, 'top', height);\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MdbErrorDirective } from './error.directive';\nimport { MdbSuccessDirective } from './success.directive';\nimport { MdbValidateDirective } from './validate.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [MdbErrorDirective, MdbSuccessDirective, MdbValidateDirective],\n  exports: [MdbErrorDirective, MdbSuccessDirective, MdbValidateDirective],\n})\nexport class MdbValidationModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["defaultIdNumber"],"mappings":"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"}