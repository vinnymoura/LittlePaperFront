{"version":3,"file":"mdb-angular-ui-kit-radio.mjs","sources":["../../../projects/mdb-angular-ui-kit/radio/radio-button.directive.ts","../../../projects/mdb-angular-ui-kit/radio/radio-group.directive.ts","../../../projects/mdb-angular-ui-kit/radio/radio.module.ts","../../../projects/mdb-angular-ui-kit/radio/mdb-angular-ui-kit-radio.ts"],"sourcesContent":["import { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directive, HostBinding, Input } from '@angular/core';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[mdbRadio]',\n})\nexport class MdbRadioDirective {\n  @Input()\n  get name(): string {\n    return this._name;\n  }\n  set name(value: string) {\n    this._name = value;\n  }\n  private _name: string;\n\n  @Input('checked')\n  get checked(): boolean {\n    return this._checked;\n  }\n  set checked(value: boolean) {\n    this._checked = coerceBooleanProperty(value);\n  }\n  private _checked = false;\n\n  @Input('value')\n  get value(): any {\n    return this._value;\n  }\n  set value(value: any) {\n    this._value = value;\n  }\n  private _value: any = null;\n\n  @Input('disabled')\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  @HostBinding('disabled')\n  get isDisabled(): boolean {\n    return this._disabled;\n  }\n\n  @HostBinding('checked')\n  get isChecked(): boolean {\n    return this._checked;\n  }\n\n  @HostBinding('attr.name')\n  get nameAttr(): string {\n    return this.name;\n  }\n\n  constructor() {}\n\n  _updateName(value: string): void {\n    this._name = value;\n  }\n\n  _updateChecked(value: boolean): void {\n    this._checked = value;\n  }\n\n  _updateDisabledState(value: boolean): void {\n    this._disabled = value;\n  }\n\n  static ngAcceptInputType_checked: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","import {\n  AfterContentInit,\n  ContentChildren,\n  Directive,\n  forwardRef,\n  Input,\n  OnDestroy,\n  QueryList,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { from, Subject } from 'rxjs';\nimport { startWith, switchMap, takeUntil } from 'rxjs/operators';\nimport { MdbRadioDirective } from './radio-button.directive';\n\nexport const MDB_RADIO_GROUP_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  // eslint-disable-next-line no-use-before-define, @typescript-eslint/no-use-before-define\n  useExisting: forwardRef(() => MdbRadioGroupDirective),\n  multi: true,\n};\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[mdbRadioGroup]',\n  providers: [MDB_RADIO_GROUP_VALUE_ACCESSOR],\n})\nexport class MdbRadioGroupDirective implements ControlValueAccessor, AfterContentInit, OnDestroy {\n  @ContentChildren(MdbRadioDirective, { descendants: true }) radios: QueryList<MdbRadioDirective>;\n\n  @Input()\n  get value(): any {\n    return this._value;\n  }\n  set value(value: any) {\n    this._value = value;\n    if (this.radios) {\n      this._updateChecked();\n    }\n  }\n  private _value: any;\n\n  @Input()\n  get name(): string {\n    return this._name;\n  }\n  set name(name: string) {\n    this._name = name;\n    if (this.radios) {\n      this._updateNames();\n    }\n  }\n  private _name: string;\n\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(disabled: boolean) {\n    this._disabled = disabled;\n\n    if (this.radios) {\n      this._updateDisabled();\n    }\n  }\n  private _disabled = false;\n\n  private _destroy$ = new Subject<void>();\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  ngAfterContentInit(): void {\n    this._updateNames();\n    this._updateDisabled();\n\n    this.radios.changes\n      .pipe(\n        startWith(this.radios),\n        switchMap((radios: QueryList<MdbRadioDirective>) => from(Promise.resolve(radios))),\n        takeUntil(this._destroy$)\n      )\n      .subscribe(() => this._updateRadiosState());\n  }\n\n  ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  private _updateRadiosState(): void {\n    this._updateNames();\n    this._updateChecked();\n    this._updateDisabled();\n  }\n\n  private _updateNames(): void {\n    this.radios.forEach((radio: MdbRadioDirective) => radio._updateName(this.name));\n  }\n\n  private _updateChecked(): void {\n    this.radios.forEach((radio: MdbRadioDirective) => {\n      const isChecked = radio.value === this._value;\n      radio._updateChecked(isChecked);\n    });\n  }\n\n  private _updateDisabled(): void {\n    this.radios.forEach((radio: MdbRadioDirective) => radio._updateDisabledState(this._disabled));\n  }\n\n  // Control value accessor methods\n  registerOnChange(fn: (value: any) => any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._disabled = isDisabled;\n    this._updateDisabled();\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n  }\n}\n","import { MdbRadioDirective } from './radio-button.directive';\nimport { MdbRadioGroupDirective } from './radio-group.directive';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [MdbRadioDirective, MdbRadioGroupDirective],\n  exports: [MdbRadioDirective, MdbRadioGroupDirective],\n  imports: [CommonModule, FormsModule],\n})\nexport class MdbRadioModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}